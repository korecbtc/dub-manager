openapi: 3.0.2
info:
  title: ''
  version: ''
paths:
  /api/users/:
    get:
      operationId: listUsers
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    post:
      operationId: createUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserCreate'
          description: ''
      tags:
      - api
  /api/users/me/:
    get:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: meUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: meUser
      description: ''
      parameters: []
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/{id}/:
    get:
      operationId: retrieveUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    put:
      operationId: updateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/User'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/User'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyUser
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this user.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/tasks/:
    get:
      operationId: listTasks
      description: ''
      parameters:
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
          - not_viewed
      - name: urgency
        required: false
        in: query
        description: urgency
        schema:
          type: string
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - send
          - receive
          - transport
          - patch
          - other
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    post:
      operationId: createTask
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
  /api/tasks/{id}/:
    get:
      operationId: retrieveTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
          - not_viewed
      - name: urgency
        required: false
        in: query
        description: urgency
        schema:
          type: string
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - send
          - receive
          - transport
          - patch
          - other
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    put:
      operationId: updateTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
          - not_viewed
      - name: urgency
        required: false
        in: query
        description: urgency
        schema:
          type: string
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - send
          - receive
          - transport
          - patch
          - other
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
          - not_viewed
      - name: urgency
        required: false
        in: query
        description: urgency
        schema:
          type: string
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - send
          - receive
          - transport
          - patch
          - other
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Task'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyTask
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this task.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
          - not_viewed
      - name: urgency
        required: false
        in: query
        description: urgency
        schema:
          type: string
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
      - name: type
        required: false
        in: query
        description: type
        schema:
          type: string
          enum:
          - send
          - receive
          - transport
          - patch
          - other
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/projects/:
    get:
      operationId: listProjects
      description: ''
      parameters:
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
      - name: client
        required: false
        in: query
        description: client
        schema:
          type: string
      - name: manager
        required: false
        in: query
        description: manager
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    post:
      operationId: createProject
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
  /api/projects/{id}/:
    get:
      operationId: retrieveProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
      - name: client
        required: false
        in: query
        description: client
        schema:
          type: string
      - name: manager
        required: false
        in: query
        description: manager
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    put:
      operationId: updateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
      - name: client
        required: false
        in: query
        description: client
        schema:
          type: string
      - name: manager
        required: false
        in: query
        description: manager
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
      - name: client
        required: false
        in: query
        description: client
        schema:
          type: string
      - name: manager
        required: false
        in: query
        description: manager
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Project'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Project'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Project'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Project'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyProject
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this project.
        schema:
          type: string
      - name: status
        required: false
        in: query
        description: status
        schema:
          type: string
          enum:
          - in_progress
          - finished
      - name: client
        required: false
        in: query
        description: client
        schema:
          type: string
      - name: manager
        required: false
        in: query
        description: manager
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/clients/:
    get:
      operationId: listClients
      description: ''
      parameters: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ClientCreate'
          description: ''
      tags:
      - api
    post:
      operationId: createClient
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
      tags:
      - api
  /api/clients/{id}/:
    get:
      operationId: retrieveClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
      tags:
      - api
    put:
      operationId: updateClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
      tags:
      - api
    patch:
      operationId: partialUpdateClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ClientCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ClientCreate'
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ClientCreate'
          description: ''
      tags:
      - api
    delete:
      operationId: destroyClient
      description: ''
      parameters:
      - name: id
        in: path
        required: true
        description: A unique integer value identifying this client.
        schema:
          type: string
      responses:
        '204':
          description: ''
      tags:
      - api
  /api/users/activation/:
    post:
      operationId: activationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Activation'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Activation'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Activation'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Activation'
          description: ''
      tags:
      - api
  /api/users/resend_activation/:
    post:
      operationId: resendActivationUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password/:
    post:
      operationId: resetPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_password_confirm/:
    post:
      operationId: resetPasswordConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PasswordResetConfirm'
          description: ''
      tags:
      - api
  /api/users/reset_username/:
    post:
      operationId: resetUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SendEmailReset'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SendEmailReset'
          description: ''
      tags:
      - api
  /api/users/reset_username_confirm/:
    post:
      operationId: resetUsernameConfirmUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UsernameResetConfirm'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UsernameResetConfirm'
          description: ''
      tags:
      - api
  /api/users/set_password/:
    post:
      operationId: setPasswordUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetPassword'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetPassword'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetPassword'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetPassword'
          description: ''
      tags:
      - api
  /api/users/set_username/:
    post:
      operationId: setUsernameUser
      description: ''
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SetUsername'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SetUsername'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SetUsername'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SetUsername'
          description: ''
      tags:
      - api
  /api/token/login/:
    post:
      operationId: createTokenCreate
      description: Use this endpoint to obtain user authentication token.
      parameters: []
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenCreate'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenCreate'
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenCreate'
          description: ''
      tags:
      - api
  /api/token/logout/:
    post:
      operationId: createTokenDestroy
      description: Use this endpoint to logout user (remove user authentication token).
      parameters: []
      requestBody:
        content:
          application/json:
            schema: {}
          application/x-www-form-urlencoded:
            schema: {}
          multipart/form-data:
            schema: {}
      responses:
        '201':
          content:
            application/json:
              schema: {}
          description: ''
      tags:
      - api
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        role:
          enum:
          - manager
          - executer
          - admin
          type: string
        username:
          type: string
          maxLength: 150
      required:
      - first_name
      - last_name
      - email
      - username
    Task:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        what_needed:
          type: string
          readOnly: true
        type:
          enum:
          - send
          - receive
          - transport
          - patch
          - other
          type: string
          readOnly: true
        urgency:
          enum:
          - week
          - day
          - hour
          - now
          - yesterday
          type: string
          readOnly: true
        project:
          type: object
          properties:
            id:
              type: integer
              readOnly: true
            name:
              type: string
              readOnly: true
            client:
              type: string
              readOnly: true
            date:
              type: string
              format: date
              readOnly: true
            status:
              enum:
              - in_progress
              - finished
              type: string
              readOnly: true
            description:
              type: string
              readOnly: true
            manager:
              type: string
              readOnly: true
          readOnly: true
        description:
          type: string
          readOnly: true
        status:
          enum:
          - in_progress
          - finished
          - not_viewed
          type: string
        comments:
          type: string
          nullable: true
          maxLength: 350
    Project:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          readOnly: true
        client:
          type: string
          readOnly: true
        date:
          type: string
          format: date
          readOnly: true
        status:
          enum:
          - in_progress
          - finished
          type: string
          readOnly: true
        description:
          type: string
          readOnly: true
        manager:
          type: string
          readOnly: true
    ClientCreate:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 256
        address:
          type: string
          maxLength: 256
        email:
          type: string
          format: email
          maxLength: 254
        description:
          type: string
          maxLength: 256
      required:
      - name
      - address
      - email
      - description
    UserCreate:
      type: object
      properties:
        first_name:
          type: string
          maxLength: 150
        last_name:
          type: string
          maxLength: 150
        email:
          type: string
          format: email
          maxLength: 254
        role:
          enum:
          - manager
          - executer
          - admin
          type: string
        username:
          type: string
          maxLength: 150
        password:
          type: string
          writeOnly: true
      required:
      - first_name
      - last_name
      - email
      - username
      - password
    Activation:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
      required:
      - uid
      - token
    SendEmailReset:
      type: object
      properties:
        email:
          type: string
          format: email
      required:
      - email
    PasswordResetConfirm:
      type: object
      properties:
        uid:
          type: string
        token:
          type: string
        new_password:
          type: string
      required:
      - uid
      - token
      - new_password
    UsernameResetConfirm:
      type: object
      properties:
        new_username:
          type: string
          maxLength: 150
      required:
      - new_username
    SetPassword:
      type: object
      properties:
        new_password:
          type: string
        current_password:
          type: string
      required:
      - new_password
      - current_password
    SetUsername:
      type: object
      properties:
        current_password:
          type: string
        new_username:
          type: string
          maxLength: 150
      required:
      - current_password
      - new_username
    TokenCreate:
      type: object
      properties:
        password:
          type: string
        username:
          type: string
